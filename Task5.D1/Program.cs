/*Дополнительная задача 1
    Гипотеза Гольдбаха
    Известно, что любое чётное число, большее 2,
    представимо в виде суммы 2 простых чисел,
    причём таких разложений может быть несколько.
    
    Впервые гипотезу о существовании данного разложения сформулировал математик Х. Гольдбах.

    Требуется написать программу, производящую согласно утверждению Гольдбаха,
    разложение заданного чётного числа. 
    Из всех пар простых чисел, сумма которых равна заданному числу, требуется найти пару,
    содержащую наименьшее простое число.

    Ввод:
        чётное число N (4 ≤ N ≤ 998).

    Выводные данные:
        Два простых числа, сумма которых равна числу N.
        Первым выводится наименьшее число.
        6 -> 3 3
        992 -> 73 919
Алгоритм решения:
    1. Создаем массив простых чисел от 2 до 997 =?
        1.1 Создадим массив логических значений
        1.2 Заполним массив значениями true начиная с 2(индекс) элемента
            2 - это первое простое число
        1.3 
    2. Объявим метод по поиску числа в массиве
    3. Запросим ввод числа
    4. Будем вычитать из введённого числа элементы массива
       с простыми числами по порядку возрастания и искать остаток в этом же массиве
    5. В случае нахождения остатка в массиве простых чисел получим ответ
*/ 

Console.Clear();

bool[] primeBoolArray = new bool[20];                                                 // Создаем логический массив))) 

Console.WriteLine($"\n[{string.Join("\t", primeBoolArray)}]");                            // Вывод массива

for (int i = 2; i < primeBoolArray.Length; i++)                                           // Заполним массив значениями true
{
    primeBoolArray[i] = true;
}

Console.WriteLine($"\n[{string.Join("\t", primeBoolArray)}]");                            // Вывод массива

for (int p = 2; p * p < primeBoolArray.Length; p++)                                       // Применим Алгоритм Решето Эратосфена
{
    if (primeBoolArray[p])
    {
        for (int i = p * p; i < primeBoolArray.Length; i += p)
        {
            primeBoolArray[i] = false;
        }
    }
}

Console.WriteLine($"\n[{string.Join("\t", primeBoolArray)}]");                            // Вывод массива
